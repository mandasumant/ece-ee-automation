pageName			=PageLookupPopUp
containerWindowName	=LookupPopUp


#============================================
#	INPUT AND BUTTONS
#============================================
searchBox			=TEXT##//input[contains(@name, 'searchText')] @@ \
						   //input[normalize-space(@name)='lksrch'] @@ \
						   //input[contains(@name, 'txtSearch')] @@ \
						   //input[contains(@name, 'acctName')] @@ \
						   //input[contains(@name, 'SerialNoText')] @@ \
						   //input[contains(@name, 'ProductLineName')] @@ \
						   //label[contains(text(),'Search:')]/following-sibling::input[1] @@ \
						   //node()[normalize-space(@class)='label' and contains(text(), 'CSN')]/ancestor::td[1]/following-sibling::td[1]/input
							   
allFields			=BUTTON##//input[normalize-space(@value)='SEARCH_ALL']
searchButton		=BUTTON##//input[normalize-space(@value)='Apply Filter'] @@ \
							 //input[contains(@name, 'goSearch')] @@ \
							 //input[normalize-space(@name)='go'] @@ \
							 //input[contains(@name, 'cmdsearch')] @@ \
							 //input[contains(@value, 'Search')] @@ \
							 //input[normalize-space(@class)='btn' and normalize-space(@value)='Go!']

goButton			=BUTTON##//input[normalize-space(@value)='Apply Filter'] @@ \
							 //input[contains(@name, 'goSearch')] @@ \
							 //input[normalize-space(@name)='go'] @@ \
							 //input[contains(@name, 'cmdsearch')] @@ \
							 //input[contains(@value, 'Search')] @@ \
							 //label[contains(text(),'Search:')]/following-sibling::input[2] @@ \
							 //input[normalize-space(@class)='btn' and normalize-space(@value)='Go!']
								 
newButton			=BUTTON##//input[contains(@name, 'LookupForm') and normalize-space(@value)='New'] @@ \
							 //input[contains(@name, 'associationSection') and normalize-space(@value)='New']

#============================================
#	RESULTS
#============================================
firstFoundObject	=LINK##//tr[contains(@class,'dataRow') and contains(@class,'first')]//td[1][contains(@class,'dataCell')]//a @@ \
						   //tr[contains(@class,'dataRow') and contains(@class,'first')]//a[contains(@class,'dataCell')] @@ \
						   //tr[contains(@class,'dataRow') and contains(@class,'first')]/following-sibling::tr[1]/td[1]/a @@\
						   //td[contains(@class,'dataCol')]//tr[2]//a


secondFoundObject	=LINK##//tr[contains(@class,'dataRow') and not(contains(@class,'first'))]//td[1][contains(@class,'dataCell')]//a @@ \
						   //tr[contains(@class,'dataRow') and not(contains(@class,'first'))]//a[contains(@class,'dataCell')]


noRecordsMessage	=READ_ONLY##//*[contains(normalize-space(text()), 'No matches found')] @@ \
							    //*[contains(normalize-space(text()), 'No records were found')] @@ \
							    //*[contains(normalize-space(text()), 'No Matching Record Found')]

resultsTable		=READ_ONLY##//div[normalize-space(@class)='pbBody']/table[not(contains(@id, 'NoResultTag'))] @@ \
								//div[normalize-space(@class)='pbBody']//table[normalize-space(@class)='detailList']//span/table @@ \
								//div[normalize-space(@class)='pbBody']//table[normalize-space(@class)='detailList']//table[normalize-space(@title)='Asset Details'] @@ \
								//div[normalize-space(@class)='pbBody']//table[normalize-space(@class)='detailList']//table @@ \
								//div[normalize-space(@class)='pbBody']//table[normalize-space(@class)='list']

nameInResultsTable	=READ_ONLY##TABLE_CELL_LOOKUP[resultsTable&&0]






#**********************************************************
# Note for Issue with Search Button 
#**********************************************************
#Two ways to reference the button that initiates a search (it is labeled 'Go', but user may think of it as a search button)
#Note that before July 2012 we were using this locator to find the Search All button in the account lookup for LM:
#  		input[normalize-space(@value)='Search All']
#  but had to change to this because the app now requires pressing the Apply Filter button.  It is a different button, but
#  because the Page.doPopulateLookupField method clicks "goButton", we need to add the locator there
#      input[normalize-space(@value)='Apply Filter']

#!!!!! NOTE !!!!!
#  Because some of these locators may find the Search All button in the account lookup for LM (which is not what we want!)
#    be sure to keep the locator that will find the Apply Filter button at the top of the list.  That way the framework
#    will find it first.
#  This is REALLY a kludge for the problem, and is contrary to framework design principles.  We need a real fix to the problem 
#!!!!! NOTE !!!!!

#**********************************************************
# Search Results
#**********************************************************
#firstFoundObject: Note ofr this=
#    //tr[contains(@class,'dataRow') and contains(@class,'first')]/following-sibling::tr[1]/td[1]/a
#  (which describes the first row of data in the results table generated by searching for Asset S/N in S&S tests)
#  points to the second row of the table (row 1).  That's because that table contains a blank line between the
#  header row and the first row of returned results.  Beware, because the code in Page.doPopulateLookupField
#  assumes that the first row of results is in row 0, not row 1!!! 
#
#secondFoundObject field can be used as a way to determine if the search returned more than one record
#
#noRecordsMessage: If the search did not return a result, this will usually (BUT NOT ALWAYS!!!) be present


#**********************************************************
# Results look up elements
#**********************************************************
#NOTE IN MOST CASES the locator of tables that will be referenced by Fields with a parameterized locator of TABLE_CELL_LOOKUP
#  must end with tbody!!!  But not always - approvalChainTable is an example.
#  In Firefox it is rendered as:
#		table
#			tbody
#				tr
#				tr
#				tr
#				etc.
#	But in IE it is rendered as:
#		table
#			label
#				tbody
#					tr  (just one of these)
#			tbody
#				label
#					tr
#				label
#					tr
#				label
#					tr
#					etc.
#  Leaving the tbody off of the locator works (at least in GUI.getTableAsListOfList - I haven't tried any other methods, and at least for IE - I don't know about FF)

#Leaving off tbody seems to work just fine for all tables and related lists that we encounter (as of June 15, 2012)
#resultsTable						=READ_ONLY##//div[normalize-space(@class)='pbBody']/table/tbody

#NOTE that it is INCREDIBLY IMPORTANT that you do not fiddle with the locators for resultsTable without knowing EXACTLY what you are doing!!!
#  Some of the locators may look odd, but as of now (June 15, 2012) they work for all of the many custom and just plain weird lookup pop-up
#  results tables we have encountered.  Any minor change can result in a failure in one or more lookup pop-ups, and those failures won't
#  be evident until a test fails - UNLESS you rerun ALL TESTS that manipulate lookup fields EVERY TIME you make ANY change!
#
#For example:
#      //div[normalize-space(@class)='pbBody']/table
#  is required in some cases.  (A decent predicate cannot be specified, because there are no useful attributes.)  HOWEVER, that locator
#  will not work in the Supported Asset lookup pop-up that is invoked when creating a case from Partner Center (and Sub Center?).
#  It will point to the first table on the page, which is not a results table but a table that contains a number of fields for filtering
#  the search.  So, you say, why not try something like  
#    //div[normalize-space(@class)='pbBody']//table[normalize-space(@class)='detailList']
#  We can't, because that points to both the filtering table AND the results table.  That's why I arrived at
#    //div[normalize-space(@class)='pbBody']//table[normalize-space(@class)='detailList']//table[normalize-space(@title)='Asset Details']
#  It finds the results table, and only the results table!
#  Now, you may be wondering why I changed
#    //div[normalize-space(@class)='pbBody']/table
#  to
#    //div[normalize-space(@class)='pbBody']/table[not(contains(@id, 'NoResultTag'))]
#  I did that because the original version of that locator finds yet another table on that page - a table that contains 'No Matching Record Found'
#  when no records are found, BUT STILL EXISTS (invisible to the naked eye) even when results are found!  So I added the check on the id
#  attribute so that it won't be found when we are looking for a results table.  I could have avoided doing that just be putting the locator
#  that finds the table (the one that looks for Asset Details in the title attribute) at the top of the list, BUT we should
#
#  NEVER, EVER, UNDER ANY CIRCUMSTANCES MAKE THE ABILITY TO FIND AN ELEMENT IN THE GUI DEPENDENT IN ANY WAY ON THE ORDER OF THE LOCATORS!
#    NEVER! NEVER!

